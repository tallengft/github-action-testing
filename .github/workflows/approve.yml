name: approve

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: echo Hello this is a simple script

  deploy_staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    environment: 
      name: Staging
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: echo Deploy to Staging
  
  deploy_prod:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: deploy_staging
    environment: 
      name: Production
    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: echo Deploy to Production
  
  create_release:
      name: Create Release
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Generate Version
          uses: paulhatch/semantic-version@v4.0.1
          id: get_version
          with:
            # The prefix to use to identify tags
            tag_prefix: "v"
            # A string which, if present in a git commit, indicates that a change represents a
            # major (breaking) change, supports regular expressions wrapped with '/'
            major_pattern: "(MAJOR)"
            # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
            minor_pattern: "(MINOR)"
            # A string to determine the format of the version output
            format: "${major}.${minor}.${patch}"
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ steps.get_version.outputs.version_tag }}
            release_name: Release ${{ steps.get_version.outputs.version_tag }}
            draft: false
            prerelease: false